'''Sequence of Numbers
 The sequence of numbers is generated by describing each group
of identical digits in the previous term.

Given a string of numbers,
translate the string into a sequence of numbers that describes the count of
identical digits.

For example, the string "1" has "one 1" and would be
translated to 11.

The string "11" is interpreted as "two 1s" which is
translated to 21.

The string "1211" is interpreted as "one 1, one 2,
two 1s" which is translated to 111221.

This is a tough one. Try not
to look at the solution unless you spend more than 30 minutes on it.'''

from itertools import groupby
def seq_of_numbers(str):
  groups = groupby(str)
  result = [(label, sum(1 for _ in group)) for label, group in groups]

  seq = ''
  for i in range(len(result)):
    #seq += (f'{result[i][1]}' + result[i][0])

  	seq += ('%s' % result[i][1] + result[i][0])
  return seq

print(seq_of_numbers("1211"))
# This is "one 1, one 2, two 1s"
# Prints "111221"

print(seq_of_numbers("111221"))
# This is "three 1s, two 2s, and one 1"
# Prints "312211"

print(seq_of_numbers("31131211131221"))
# This is "one 3, two 1s, one 3, one 1, one 2, three 1s,
#    one 3, one 1, two 2s, and one 1"
# Prints "13211311123113112211"
